[slideshow]
; critical notes re "directory_list" and "temp_directory" = .
;   1. paths must always contain double backslashes in every instance - a single backslash causes problems and the result, if any, will be extremely uncertain = .
;   2. paths must never end with a backslash; backslashes are "escaping" notifiers - if a path ends in a backslash, always put a space character after it at the end of string = .
; remember : always use double-backslashes in all paths = .
; remember : never end a path with a backslash as the last character (you would rue it) = .
; = .
; "directory_list" is defined as a list of paths (double-backslashed); beware: .\\ by itself means current default path = .
directory_list = ['D:\\ssTEST\\TEST_VIDS_IMAGES\\2022-11-Tasmania_renamed\\10']
; "temp_directory_list" is defined as a list of paths (for coding convenience) however only the first path in the list will be used = .
temp_directory_list = ['D:\\ssTEST\\temp']
; "snippets_filename_path_list" is defined as a list of paths (for coding convenience) however only the first path in the list will be used = .
snippets_filename_path_list = ['D:\\ssTEST\\TEST_VIDS_IMAGES\\2022-11-Tasmania_renamed\\vpy_slideshow.2022-11-Tasmania_renamed-10.snippets.txt']
; "output_mkv_filename_path_list" is defined as a list of paths (for coding convenience) however only the first path in the list will be used = .
output_mkv_filename_path_list = ['D:\\ssTEST\\TEST_VIDS_IMAGES\\2022-11-Tasmania_renamed\\vpy_slideshow.2022-11-Tasmania_renamed-10.mkv']
; "recursive" is true or false; if true, it also walks the sub-directory tree(s) looking for images/videos = .
recursive = True
; "subtitle_depth" an integer; it subtitles with the path/filename of the image/video from the right up to the nominated depth; 0 turns it off = .
subtitle_depth = 0
; "subtitle_fontsize" an integer; the fontsize used for subtitling (18 is good) = .
subtitle_fontsize = 18
; "subtitle_fontscale" a real number; scale applied to the fontsize (1.0 to 3.0 is good) = .
subtitle_fontscale = 1.0
; "duration_pic_sec" a real number; the number of seconds a pic is displayed in trhe slideshow = .
duration_pic_sec = 3.0
; "duration_crossfade_secs" a real number; the number of seconds for a crossfade between each image/video = .
duration_crossfade_secs = 0.5
; "crossfade_type" a string; the type of crossfade if duration_crossfade_secs > 0 = .
; "crossfade_type" must be one of ['none', 'random', 'fade', 'fade_to_black', 'fade_from_black', 'wipe', 'push', 'slide_expand', 'squeeze_slide', 'squeeze_expand', 'cover', 'reveal', 'curtain_cover', 'curtain_reveal', 'peel', 'pixellate', 'cube_rotate'] = .
crossfade_type = random
; "crossfade_direction" a string; the direction of crossfade type if duration_crossfade_secs > 0 = .
; "crossfade_direction" must be one of ['left', 'right', 'up', 'down', 'horizontal', 'vertical'] = .
; crossfade_direction" could be be one of "left" "right" "up" "down" if crossfade type not "curtain_cover" or "curtain_reveal" = .
; crossfade_direction" could be be "horizontal" or "vertical" if crossfade type is "curtain_cover" or "curtain_reveal" = .
crossfade_direction = left
; "duration_max_video_sec" a real number; the maximum number of seconds a video runs before it is clipped off = .
duration_max_video_sec = 7200.0
; "denoise_small_size_videos" is true or false; if true, smaller framesize videos (which tend to be older and noisier) will be slightly denoised using mv.degrain1 = .
denoise_small_size_videos = True
; "debug_mode" is true or false; if true, you will rue the day - an unbelievable volume of debug messages as used during development/debugging = .
debug_mode = False
; does not matter what you specify for target_color* stuff here, we always used fixed values ahs shown below = 
; "target_colorspace" a string; set for hd; required to render subtitles, it is fixed at this value; this item must match target_colorspace_matrix_i etc = .
target_colorspace = BT.709
; "target_colorspace_matrix_i" an integer; set for hd; this is the value that counts; it is fixed at this value; turn on debug_mode to see lists of these values = .
target_colorspace_matrix_i = 1
; "target_color_transfer_i" an integer; set for hd; this is the value that counts; it is fixed at this value; used by vapoursynth; turn on debug_mode to see lists of these values = .
target_color_transfer_i = 1
; "target_color_primaries_i" an integer; set for hd; this is the value that counts; it is fixed at this value; turn on debug_mode to see lists of these values = .
target_color_primaries_i = 1
; "target_color_range_i" an integer; set for full-range, not limited-range; this is the (vapoursynth) value that counts; it is fixed at this value; used by vapoursynth; turn on debug_mode to see lists of these values = .
; "target_color_range_i note: this vapoursynth value is opposite to that needed by zimg and by resizers which require the zimg (the propeer) value; internal transations vs->zimg are done = .
target_color_range_i = 0
; "target_width" an integer; set for hd; do not change unless a dire emergency = .
target_width = 1920
; "target_height" an integer; set for hd; do not change unless a dire emergency = .
target_height = 1080
; "target_fpsnum" an integer; set for pal = .
target_fpsnum = 25
; "target_fpsden" an integer; set for pal = .
target_fpsden = 1
; "upsize_kernel" a string; do not change unless a dire emergency; you need the exact string name of the resizer = .
upsize_kernel = Lanczos
; "downsize_kernel" a string; do not change unless a dire emergency; you need the exact string name of the resizer = .
downsize_kernel = Spline36
; "box" is true or false; if true, images and videos are resized vertically/horizontally to maintain aspect ratio and padded; false streches and squeezes  = .
box = True

[Enum_vs.MatrixCoefficients]
0 = 0
1 = 1
2 = 2
4 = 4
5 = 5
6 = 6
8 = 8
9 = 9
10 = 10
12 = 12
13 = 13
14 = 14

[Enum_vs.TransferCharacteristics]
1 = 1
2 = 2
4 = 4
5 = 5
6 = 6
7 = 7
8 = 8
9 = 9
10 = 10
11 = 11
13 = 13
14 = 14
15 = 15
16 = 16
18 = 18

[Enum_vs.ColorPrimaries]
1 = 1
2 = 2
4 = 4
5 = 5
6 = 6
7 = 7
8 = 8
9 = 9
10 = 10
11 = 11
12 = 12
22 = 22

[Enum_vs.ColorRange]
0 = 0
1 = 1

[Enum_ZIMG.ColorRange]
zimg.range_limited = 0
zimg.range_full = 1

[Enum_vs.PresetFormat]
0 = 0
268959744 = 268959744
269025280 = 269025280
269090816 = 269090816
269221888 = 269221888
269352960 = 269352960
269484032 = 269484032
270532608 = 270532608
286261248 = 286261248
287309824 = 287309824
805831170 = 805831170
805831168 = 805831168
805830657 = 805830657
805830913 = 805830913
805830912 = 805830912
805830656 = 805830656
805896449 = 805896449
805896448 = 805896448
805896192 = 805896192
805961985 = 805961985
805961984 = 805961984
805961728 = 805961728
806093057 = 806093057
806093056 = 806093056
806092800 = 806092800
806224129 = 806224129
806224128 = 806224128
806223872 = 806223872
806355201 = 806355201
806355200 = 806355200
806354944 = 806354944
823132160 = 823132160
824180736 = 824180736
537395200 = 537395200
537460736 = 537460736
537526272 = 537526272
537657344 = 537657344
537788416 = 537788416
537919488 = 537919488
554696704 = 554696704
555745280 = 555745280

[Enum_vs.ColorFamily]
0 = 0
1 = 1
2 = 2
3 = 3

[Enum_vs.ChromaLocation]
0 = 0
1 = 1
2 = 2
3 = 3
4 = 4
5 = 5

[Enum_vs.FieldBased]
0 = 0
2 = 2
1 = 1

